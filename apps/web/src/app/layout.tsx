// app配下にlayout.tsxを配置すると、
// 勝手にこれにラップされてルーティングされたページが返ってくる
// このファイルは必須

// @をつけたディレクトリ(これはルーティングされない)を利用できる
// default.tsxを配置しないと直接のアクセスに404が出る

import './globals.css';
import { Inter } from 'next/font/google';
import { CounterProvider } from '@/context/CounterProvider';
import AppProvider from '@/providers/app';

// フォントの設定
const intr = Inter({ subsets: ['latin'] });

// headタグに入れるメタデータはmetadataに入れて設定できる
// これはpage.tsxでも設定できる
export const metadata = {
  title: {
    default: 'Create Next App',
    template: `%s | Next App`, // このようにすると全てのページのtitleにNext Appが付与される
  },
  description: 'Generated by create next app',
  // https://zenn.dev/temasaguru/articles/641a10cd5af02a
  metadataBase: new URL(process.env.URL ?? 'http://localhost:3000'),
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body className={intr.className}>
        <AppProvider>
          <CounterProvider>{children}</CounterProvider>
        </AppProvider>
      </body>
    </html>
  );
}

// import "./globals.css";
// import { Inter } from "next/font/google";

// const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
//   team,
//   analytics,
// }: {
//   children: React.ReactNode;
//   team: React.ReactNode;
//   analytics: React.ReactNode;
// }) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>
//         <div>{children}</div>
//         <div>{team}</div>
//         <div>{analytics}</div>
//       </body>
//     </html>
//   );
// }

// import * as React from 'react';
// import ChecklistIcon from '@mui/icons-material/Checklist';
// import DashboardIcon from '@mui/icons-material/Dashboard';
// import HomeIcon from '@mui/icons-material/Home';
// import LogoutIcon from '@mui/icons-material/Logout';
// import SettingsIcon from '@mui/icons-material/Settings';
// import StarIcon from '@mui/icons-material/Star';
// import SupportIcon from '@mui/icons-material/Support';
// import AppBar from '@mui/material/AppBar';
// import Box from '@mui/material/Box';
// import Divider from '@mui/material/Divider';
// import Drawer from '@mui/material/Drawer';
// import List from '@mui/material/List';
// import ListItem from '@mui/material/ListItem';
// import ListItemButton from '@mui/material/ListItemButton';
// import ListItemIcon from '@mui/material/ListItemIcon';
// import ListItemText from '@mui/material/ListItemText';
// import Toolbar from '@mui/material/Toolbar';
// import Typography from '@mui/material/Typography';
// import { Roboto } from 'next/font/google';
// import Link from 'next/link';
// import AppProvider from '@/providers/app';

// export const metadata = {
//   title: 'Next.js App Router + Material UI v5',
//   description: 'Next.js App Router + Material UI v5',
//   // https://zenn.dev/temasaguru/articles/641a10cd5af02a
//   metadataBase: new URL(process.env.URL ?? 'http://localhost:3000'),
// };

// const roboto = Roboto({
//   weight: ['300', '400', '500', '700'],
//   subsets: ['latin'],
// });

// const DRAWER_WIDTH = 240;

// const LINKS = [
//   { text: 'Home', href: '/', icon: HomeIcon },
//   { text: 'Starred', href: '/starred', icon: StarIcon },
//   { text: 'Tasks', href: '/tasks', icon: ChecklistIcon },
// ];

// const PLACEHOLDER_LINKS = [
//   { text: 'Settings', icon: SettingsIcon },
//   { text: 'Support', icon: SupportIcon },
//   { text: 'Logout', icon: LogoutIcon },
// ];

// export default function RootLayout({ children }: { children: React.ReactNode }) {
//   return (
//     <html lang="en">
//       <body className={roboto.className}>
//         <AppProvider>
//           <AppBar position="fixed" sx={{ zIndex: 2000 }}>
//             <Toolbar sx={{ backgroundColor: 'background.paper' }}>
//               <DashboardIcon sx={{ color: '#444', mr: 2, transform: 'translateY(-2px)' }} />
//               <Typography variant="h6" noWrap component="div" color="black">
//                 Next.js App Router
//               </Typography>
//             </Toolbar>
//           </AppBar>
//           <Drawer
//             sx={{
//               width: DRAWER_WIDTH,
//               flexShrink: 0,
//               '& .MuiDrawer-paper': {
//                 width: DRAWER_WIDTH,
//                 boxSizing: 'border-box',
//                 top: ['48px', '56px', '64px'],
//                 height: 'auto',
//                 bottom: 0,
//               },
//             }}
//             variant="permanent"
//             anchor="left"
//           >
//             <Divider />
//             <List>
//               {LINKS.map(({ text, href, icon: Icon }) => (
//                 <ListItem key={href} disablePadding>
//                   {/* component -> LinkComponent */}
//                   <ListItemButton LinkComponent={Link} href={href}>
//                     <ListItemIcon>
//                       <Icon />
//                     </ListItemIcon>
//                     <ListItemText primary={text} />
//                   </ListItemButton>
//                 </ListItem>
//               ))}
//             </List>
//             <Divider sx={{ mt: 'auto' }} />
//             <List>
//               {PLACEHOLDER_LINKS.map(({ text, icon: Icon }) => (
//                 <ListItem key={text} disablePadding>
//                   <ListItemButton>
//                     <ListItemIcon>
//                       <Icon />
//                     </ListItemIcon>
//                     <ListItemText primary={text} />
//                   </ListItemButton>
//                 </ListItem>
//               ))}
//             </List>
//           </Drawer>
//           <Box
//             component="main"
//             sx={{
//               flexGrow: 1,
//               bgcolor: 'background.default',
//               ml: `${DRAWER_WIDTH}px`,
//               mt: ['48px', '56px', '64px'],
//               p: 3,
//             }}
//           >
//             {children}
//           </Box>
//         </AppProvider>
//       </body>
//     </html>
//   );
// }
